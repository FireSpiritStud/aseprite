name: build
on: [push, pull request]
jobs :
build:
runs-on: ${{ matrix.os }}
strategy:
fail-fast: false
matrix:
os:[windows-latest]build type: [Release]
enable ui: [on]
include :
-os:windows-latestbuild type: Release
enable ui: on
steps:
-uses: actions/checkout@v3
with:
submodules:"recursive"
name: ccache
uses: hendrikmuhs/ccache-action@v1if: runner.os =='Linux'
with:
key:${{ matrix.os }}-${{ matrix.enable_ui }}
-uses:seanmiddleditch/gha-setup-ninja@master
uses:ilammy/msvc-dev-cmd@v1
if: runner.os == 'windows'name: Install Dependencies
shell: bash
run:
if[[ "${{ runner.os }}"== "Linux" ]]; then
sudo apt-get update -gq
sudo apt-get install -y\
libx11-dev libxcursor-dev libxi-dev
fi
name: Generating Makefiles
shell: bash
run:
if[["${{ runner.os }}"=="windows" 1l ; then
export enable ccache=off
else 
export enable ccache=on
fi
curl -L https://github.com/blueloveTH/aseprite/releases/download/v0.01/skia.zip --output skia.zip
7z x skia.zip
cmake -s .-B build -G Ninja 
-DCMAKE BUILD TYPE=${{ matrix.build type }}\
-DENABLE UI=${{ matrix.enable_ui }}\
-DENABLE CCACHE=$enable ccache 
-DLAF BACKEND=skia 
-DSKIA DIR=./skia \
-DSKIA LIBRARY DIR=./skia/out/Release-x64
-DSKIA LIBRARY=./skia/out/Release-x64/skia.lib
name: compiling
shell: bash
run:
cd build && ninja
uses: actions/upload-artifact@v3
with:
name: aseprite
path:
D:/a/aseprite/aseprite/build/bin/data
D:/a/aseprite/aseprite/build/bin/aseprite.exe
